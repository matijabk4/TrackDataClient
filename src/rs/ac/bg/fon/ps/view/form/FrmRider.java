/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.ac.bg.fon.ps.view.form;

import java.awt.event.ActionListener;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import rs.ac.bg.fon.ps.domain.MotorcycleMake;
import rs.ac.bg.fon.ps.domain.Rider;
import rs.ac.bg.fon.ps.view.form.util.FormMode;

/**
 *
 * @author Matija
 */
public class FrmRider extends javax.swing.JDialog {

    /**
     * Creates new form FrmRider
     */
    public FrmRider(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

   /* public FrmRider(java.awt.Frame parent, boolean modal, FormMode formMode, Rider r) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        prepareView(formMode);
        txtFName.setText(r.getFirstname());
        txtSName.setText(r.getSurname());
        txtID.setText(String.valueOf(r.getID()));
        txtNationality.setText(r.getNationality());
        txtRacingNum.setText(String.valueOf(r.getRacingNum()));
        cbMotorcycleMake.setSelectedItem(r.getMotorcycle());
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        lblFName = new javax.swing.JLabel();
        txtFName = new javax.swing.JTextField();
        txtSName = new javax.swing.JTextField();
        lblSName = new javax.swing.JLabel();
        txtNationality = new javax.swing.JTextField();
        lblNationality = new javax.swing.JLabel();
        lblRacingNum = new javax.swing.JLabel();
        txtRacingNum = new javax.swing.JTextField();
        lblMotorcycle = new javax.swing.JLabel();
        cbMotorcycleMake = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEnableChanges = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        lblIDError = new javax.swing.JLabel();
        lblFirstnameError = new javax.swing.JLabel();
        lblSurnameError = new javax.swing.JLabel();
        lblNationalityError = new javax.swing.JLabel();
        lblRacingNumberError = new javax.swing.JLabel();
        lblCurrentUser = new javax.swing.JLabel();
        lblCU = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TrackData v1 - New Rider");

        lblID.setText("ID:");

        lblFName.setText("Firstname:");

        lblSName.setText("Surname:");

        lblNationality.setText("Nationality:");

        lblRacingNum.setText("Racing number (0-99):");

        lblMotorcycle.setText("Motorcycle make:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEnableChanges.setText("Enable changes");
        btnEnableChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnableChangesActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        lblIDError.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblIDError.setForeground(new java.awt.Color(255, 0, 0));

        lblFirstnameError.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblFirstnameError.setForeground(new java.awt.Color(255, 0, 0));

        lblSurnameError.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblSurnameError.setForeground(new java.awt.Color(255, 0, 0));

        lblNationalityError.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblNationalityError.setForeground(new java.awt.Color(255, 0, 0));

        lblRacingNumberError.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblRacingNumberError.setForeground(new java.awt.Color(255, 0, 0));

        lblCurrentUser.setText("Current user:");

        lblCU.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCU.setForeground(new java.awt.Color(51, 51, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFName)
                            .addComponent(lblID))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblFirstnameError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(txtSName, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(txtFName, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(lblIDError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSurnameError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 47, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnEnableChanges)
                        .addGap(38, 38, 38)
                        .addComponent(btnDelete)
                        .addGap(29, 29, 29)
                        .addComponent(btnSave))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(lblNationality)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblNationalityError, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                .addComponent(txtNationality)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblMotorcycle)
                                .addComponent(lblRacingNum))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblRacingNumberError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbMotorcycleMake, javax.swing.GroupLayout.Alignment.TRAILING, 0, 109, Short.MAX_VALUE)
                                .addComponent(txtRacingNum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)))))
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCurrentUser, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCU, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCurrentUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblID)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNationality)
                            .addComponent(txtNationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIDError)
                            .addComponent(lblNationalityError))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFName)
                            .addComponent(txtFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMotorcycle)
                            .addComponent(cbMotorcycleMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFirstnameError)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRacingNum)
                            .addComponent(txtRacingNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblSName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSurnameError)
                    .addComponent(lblRacingNumberError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnEnableChanges)
                    .addComponent(btnCancel)
                    .addComponent(btnEdit))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        /*try {
            validateForm();
            Rider rider = new Rider();
            rider.setID(Long.parseLong(txtID.getText().trim()));
            rider.setFirstname(txtFName.getText().trim());
            rider.setSurname(txtSName.getText().trim());
            rider.setNationality(txtNationality.getText().trim());
            rider.setMotorcycle((MotorcycleMake) cbMotorcycleMake.getSelectedItem());
            rider.setRacingNum(Integer.parseInt(txtRacingNum.getText().trim()));

            Controller.getInstance().addRider(rider);

            JOptionPane.showMessageDialog(this, "Rider successfully saved!", "Add rider", JOptionPane.INFORMATION_MESSAGE);
            txtID.setText("");
            txtFName.setText("");
            txtSName.setText("");
            txtNationality.setText("");
            cbMotorcycleMake.setSelectedItem(MotorcycleMake.Honda);
            txtRacingNum.setText("");
        } catch (Exception ex) {
            if (ex.getMessage().equalsIgnoreCase("Rider could not be created!")) {
                lblIDError.setText("Rider with given ID already exists");
            }
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Rider error", JOptionPane.ERROR_MESSAGE);
        }*/
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        //dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnEnableChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnableChangesActionPerformed
       // setupComponents(FormMode.FORM_EDIT);
    }//GEN-LAST:event_btnEnableChangesActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        /*try {
            validateForm();
            List<Rider> riders = Controller.getInstance().getAllRiders();
            for (Rider r : riders) {
                if (r.getID() == Long.parseLong(txtID.getText().trim())) {
                    r.setFirstname(String.valueOf(txtFName.getText().trim()));
                    r.setSurname(String.valueOf(txtSName.getText().trim()));
                    r.setNationality(String.valueOf(txtNationality.getText().trim()));
                    r.setMotorcycle((MotorcycleMake) cbMotorcycleMake.getSelectedItem());
                    r.setRacingNum(Integer.parseInt(txtRacingNum.getText().trim()));
                    JOptionPane.showMessageDialog(this, "Rider successfully updated!", "TrackData 1.0", JOptionPane.INFORMATION_MESSAGE);
                    dispose();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Rider error", JOptionPane.ERROR_MESSAGE);
        }*/
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        /*try {
            List<Rider> riders = Controller.getInstance().getAllRiders();
            int index = 0;
            for (Rider rider : riders) {
                if (rider.getID() == Long.parseLong(txtID.getText().trim())) {
                    index = riders.indexOf(rider);
                }
            }
            riders.remove(index);
            JOptionPane.showMessageDialog(this, "Rider successfully deleted!", "TrackData 1.0", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        } catch (Exception ex) {
            Logger.getLogger(FrmRider.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEnableChanges;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<Object> cbMotorcycleMake;
    private javax.swing.JLabel lblCU;
    private javax.swing.JLabel lblCurrentUser;
    private javax.swing.JLabel lblFName;
    private javax.swing.JLabel lblFirstnameError;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblIDError;
    private javax.swing.JLabel lblMotorcycle;
    private javax.swing.JLabel lblNationality;
    private javax.swing.JLabel lblNationalityError;
    private javax.swing.JLabel lblRacingNum;
    private javax.swing.JLabel lblRacingNumberError;
    private javax.swing.JLabel lblSName;
    private javax.swing.JLabel lblSurnameError;
    private javax.swing.JTextField txtFName;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNationality;
    private javax.swing.JTextField txtRacingNum;
    private javax.swing.JTextField txtSName;
    // End of variables declaration//GEN-END:variables

    /*private void prepareView(FormMode formMode) {
        fillCbMotorcycleMake();
        setupComponents(formMode);
    }

    private void fillCbMotorcycleMake() {
        cbMotorcycleMake.removeAllItems();
        for (MotorcycleMake mM : MotorcycleMake.values()) {
            cbMotorcycleMake.addItem(mM);
        }
    }*/

    /*private void setupComponents(FormMode formMode) {
        switch (formMode) {
            case FORM_ADD:
                btnSave.setVisible(true);
                btnDelete.setEnabled(false);
                btnCancel.setVisible(true);
                btnEnableChanges.setEnabled(false);
                btnEdit.setEnabled(false);
                break;
            case FORM_VIEW:
                btnSave.setEnabled(false);
                btnDelete.setVisible(true);
                btnCancel.setVisible(true);
                btnEnableChanges.setVisible(true);
                btnEdit.setEnabled(false);

                txtID.setEnabled(false);
                txtFName.setEnabled(false);
                txtSName.setEnabled(false);
                txtNationality.setEnabled(false);
                cbMotorcycleMake.setEnabled(false);
                txtRacingNum.setEnabled(false);
                break;
            case FORM_EDIT:

                btnDelete.setEnabled(false);
                btnCancel.setVisible(true);
                btnEnableChanges.setVisible(true);
                btnEdit.setEnabled(true);

                txtID.setEnabled(false);
                txtFName.setEnabled(true);
                txtSName.setEnabled(true);
                txtNationality.setEnabled(true);
                cbMotorcycleMake.setEnabled(true);
                txtRacingNum.setEnabled(true);
                break;

        }
    }*/

    /*private void validateForm() throws Exception {
        lblIDError.setText("");
        lblFirstnameError.setText("");
        lblSurnameError.setText("");
        lblNationalityError.setText("");
        lblRacingNumberError.setText("");
        String msg = "";
        if (txtID.getText().isEmpty()) {
            lblIDError.setText("Please insert ID");
            msg += "ID cannot be empty!\n";

        } else {
            try {
                Long.parseLong(txtID.getText().trim());
            } catch (Exception e) {
                lblIDError.setText("Please insert long value");
                msg += "ID must be a long value!\n";
            }
        }
        if (txtFName.getText().isEmpty()) {
            lblFirstnameError.setText("Please insert firstname");
            msg += "Firstname cannot be empty!\n";

        }
        if (txtSName.getText().isEmpty()) {
            lblSurnameError.setText("Please insert surname");
            msg += "Surname cannot be empty!\n";
        }
        if (txtNationality.getText().isEmpty()) {
            lblNationalityError.setText("Please insert nationality");
            msg += "Nationality cannot be empty!\n";
        }
        if (txtRacingNum.getText().isEmpty()) {
            lblRacingNumberError.setText("Please insert racing number");
            msg += "Racing number cannot be empty!\n";
        } else {
            try {
                Integer.parseInt(txtRacingNum.getText().trim());
            } catch (Exception e) {
                lblRacingNumberError.setText("Please insert integer value");
                msg += "Racing number must be an integer value!\n";
            }

        }
        if (!msg.isEmpty()) {
            throw new Exception(msg);
        }
    }*/

    public javax.swing.JButton getBtnCancel() {
        return btnCancel;
    }

    public javax.swing.JButton getBtnDelete() {
        return btnDelete;
    }

    public javax.swing.JButton getBtnEdit() {
        return btnEdit;
    }

    public javax.swing.JButton getBtnEnableChanges() {
        return btnEnableChanges;
    }

    public javax.swing.JButton getBtnSave() {
        return btnSave;
    }

    public javax.swing.JComboBox<Object> getCbMotorcycleMake() {
        return cbMotorcycleMake;
    }

    public javax.swing.JLabel getLblCU() {
        return lblCU;
    }

    public javax.swing.JLabel getLblCurrentUser() {
        return lblCurrentUser;
    }

    public javax.swing.JLabel getLblFName() {
        return lblFName;
    }

    public javax.swing.JLabel getLblFirstnameError() {
        return lblFirstnameError;
    }

    public javax.swing.JLabel getLblID() {
        return lblID;
    }

    public javax.swing.JLabel getLblIDError() {
        return lblIDError;
    }

    public javax.swing.JLabel getLblMotorcycle() {
        return lblMotorcycle;
    }

    public javax.swing.JLabel getLblNationality() {
        return lblNationality;
    }

    public javax.swing.JLabel getLblNationalityError() {
        return lblNationalityError;
    }

    public javax.swing.JLabel getLblRacingNum() {
        return lblRacingNum;
    }

    public javax.swing.JLabel getLblRacingNumberError() {
        return lblRacingNumberError;
    }

    public javax.swing.JLabel getLblSName() {
        return lblSName;
    }

    public javax.swing.JLabel getLblSurnameError() {
        return lblSurnameError;
    }

    public javax.swing.JTextField getTxtFName() {
        return txtFName;
    }

    public javax.swing.JTextField getTxtID() {
        return txtID;
    }

    public javax.swing.JTextField getTxtNationality() {
        return txtNationality;
    }

    public javax.swing.JTextField getTxtRacingNum() {
        return txtRacingNum;
    }

    public javax.swing.JTextField getTxtSName() {
        return txtSName;
    }

    public void addSaveBtnActionListener(ActionListener actionListener) {
         btnSave.addActionListener(actionListener);
    }

    public void addEnableChangesBtnActionListener(ActionListener actionListener) {
         btnEnableChanges.addActionListener(actionListener);
    }

    public void addCancelBtnActionListener(ActionListener actionListener) {
        btnCancel.addActionListener(actionListener);
    }

    public void addDeleteBtnActionListener(ActionListener actionListener) {
         btnDelete.addActionListener(actionListener);
    }

    public void addEditBtnActionListener(ActionListener actionListener) {
        btnEdit.addActionListener(actionListener);
    }



    

   

  

   
    
}
